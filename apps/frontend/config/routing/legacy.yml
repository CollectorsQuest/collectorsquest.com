### LEGACY

legacy_community_help:
  url:  /community/help
  param: { module: _legacy, action: help }

legacy_community_spotlight:
  url:   /community/spotlight
  param: { module: _legacy, action: spotlight }

legacy_community:
  url:   /community
  param: { module: _legacy, action: spotlight }

legacy_collectible_sell:
  url:  /collectible/sell
  param: { module: _legacy, action: spotlight }

legacy_featured_week:
  url:   /community/spotlight/:id/:slug
  class: sfPropelRoute
  options: { model: Featured, type: object, method: getObjectForFeaturedWeek }
  param: { module: _legacy, action: spotlight }
  requirements: { id: '\d+', slug: '[\-\w\.]+' }

legacy_15_minutes_of_fame:
  url:   /community/15-minutes-of-fame
  param: { module: _legacy, action: spotlight }

legacy_seller_subscribe:
  url:   /seller/subscribe
  param: { module: _legacy, action: comingSoon }

legacy_collector_signup_facebook:
  url:   /collector/signup/facebook
  param: { module: collector, action: signup }

legacy_collections_most_recent:
  url:  /collections/filter/most-recent
  param: { module: _legacy, action: collectionsMostRecent }

legacy_collector_by_slug:
  url:  /collector/:slug
  class: sfPropelRoute
  options: { model: Collector, type: object, method: getObjectForRoute }
  param: { module: collector, action: index }
  requirements: { slug: '[\-\w\.]+' }

legacy_collectible_by_slug:
  url:  /collection/item/:id/:slug
  class: cqPropelRoute
  options: { model: Collectible, type: object, method: getObjectForRoute, statsd: true }
  param: { module: collection, action: collectible }
  requirements: { id: '\d+', slug: '[\-\w\.]+' }

legacy_featured_week_page:
  url:  /featured-week/:slug
  param: { module: _legacy, action: featuredWeek }
