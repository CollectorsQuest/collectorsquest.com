# This file references the following schemas:
#  -  propel_main_schema.yml

connection: propel
noXsd: false
defaultIdMethod: native
package: lib.model.organizations

classes:


    # TODO: Add archive tables once the schema has stabilized


    # Organization table. Tied to a Founder (Collector) by a hard link
  Organization:
    columns:
      id:                     ~
      founder_id:             { type: integer,      required: true, foreignClass: Collector, foreignReference: id, fkPhpName: Founder, fkRefPhpName: FoundedOrganization  }
      type:                   { type: tinyint,      required: false, foreignClass: OrganizationType, foreignReference: type }
      type_other:             { type: varchar(255), required: false }
      name:                   { type: varchar(255), required: true, primaryString: true }
      url:                    { type: varchar(255), required: false }
      phone:                  { type: varchar(255), required: false }
      description:            { type: longvarchar,  required: false }
      access:                 { type: enum,         required: true, valueSet: "open, moderated, private", default: moderated }
      referral_code:          { type: varchar(50),  required: false, index: unique }

      eblob: { type: longvarchar, default: null }

    propel_behaviors:
      timestampable:          ~
      sluggable:
        pattern:              "{Name}"
        permanent:            false
      aggregate_column:
        name:                 nb_members
        foreign_table:        organization_membership
        expression:           COUNT(*)
      num_views:              ~
    behaviors:
      PropelActAsEblobBehavior:
        column:               eblob
      IceMultimediaBehavior:  []

    # Initially Antique Malls, Flea Markets, Trade Shows and Collector Clubs. May be expanded
  OrganizationType:
    columns:
      # a note about propel enum: new values should only be added to the end of the value set, or bad things happen
      type:                   { type: enum,         required: true, valueSet: "collector_club, antique_mall, flea_market, trade_show", primaryKey: true }
      name:                   { type: varchar(255), required: true, primaryString: true }
      description:            { type: longvarchar,  required: false }
    propel_behaviors:
      symfony:                { form: true, filter: false }

    # M:M table that also holds the status information for the collector / organization relationship
  OrganizationMembership:
    isCrossRef: true
    columns:
      organization_id:        { type: integer,      required: true, primaryKey: true, foreignClass: Organization, foreignReference: id, onDelete: cascade }
      collector_id:           { type: integer,      required: true, primaryKey: true, foreignClass: Collector, foreignReference: id, onDelete: cascade }
      type:                   { type: enum,         required: true, valueSet: "administrator, contributor, member" }
    propel_behaviors:
      symfony:                { form: false, filter: false }
      timestampable:
        create_column:        joined_at

    # M:M table that holds request for admission in moderated groups, as well as invitations to joint a particular group
  OrganizationMembershipRequest:
    columns:
      id:                     ~
      organization_id:        { type: integer,      required: true, foreignClass: Organization, foreignReference: id, onDelete: cascade }
      collector_id:           { type: integer,      required: true, foreignClass: Collector, foreignReference: id, onDelete: cascade }
      organization_admin_id:  { type: integer,      required: false, foreignClass: Collector, foreignReference: id, fkPhpName: OrganizationAdmin, fkRefPhpName: HandledOrganizationMembershipRequest  }
      is_invitation:          { type: boolean,      required: true, default: false }
      status:                 { type: enum,         required: true, valueSet: "pending, approved, denied", default: pending }
    propel_behaviors:
      symfony:                { form: false, filter: false }
      timestampable:          ~


#    The following is commented out pending the actual need to implement it,
#    and will be added when the tables actually become necessary to alleviate confusion
#
#    # Extends Collection. Denotes a collection specific to an organization
#  OrganizationCollection:
#    columns:
#      organization_id:        { type: integer, required: true, foreignClass: Organization, foreignReference: id, onDelete: cascade }
#    propel_behaviors:
#      concrete_inheritance: { extends: collection, copy_data_to_parent: true }
#
#    # M:M between an Organization and a Collectible. Allows a collectible to be added to an organization
#  OrganizationCollectible:
#    isCrossRef: true
#    columns:
#      organization_id:        { type: integer,      required: true, primaryKey: true, foreignClass: Organization, foreignReference: id, onDelete: cascade }
#      collectible_id:         { type: integer,      required: true, primaryKey: true, foreignClass: Collectible, foreignReference: id, onDelete: cascade }
#    propel_behaviors:
#      symfony:                { form: false, filter: false }
