### Collectors Index

source prod_collectors : prod_website
{
  sql_query  = SELECT collector.id as id, collector.facebook_id, collector.display_name, collector.score as score, \
                      collector.email, collector.is_public, collector.created_at, collector_profile.collector_type, \
                      collector_profile.zip_postal, country.name, collector_profile.website, \
                      GROUP_CONCAT(collector_properties.property_value) AS `properties` \
                 FROM collector \
                      LEFT JOIN collector_profile ON (collector_profile.collector_id = collector.id) \
                      LEFT JOIN collector_profile_extra_property `collector_properties` ON (collector_properties.collector_profile_collector_id = collector_profile.collector_id) \
                      LEFT JOIN geo_country `country` ON (country.iso3166 = collector_profile.country_iso3166) \
                GROUP BY collector.id

  sql_attr_uint  = facebook_id
  sql_attr_uint  = score
  sql_attr_uint  = is_public

  sql_attr_timestamp  = created_at
}

source dev_collectors : dev_website
{
  sql_query  = SELECT collector.id as id, collector.facebook_id, collector.display_name, collector.score as score, \
                      collector.email, collector.is_public, collector.created_at, collector_profile.collector_type, \
                      collector_profile.zip_postal, country.name, collector_profile.website, \
                      GROUP_CONCAT(collector_properties.property_value) AS `properties` \
                 FROM collector \
                      LEFT JOIN collector_profile ON (collector_profile.collector_id = collector.id) \
                      LEFT JOIN collector_profile_extra_property `collector_properties` ON (collector_properties.collector_profile_collector_id = collector_profile.collector_id) \
                      LEFT JOIN geo_country `country` ON (country.iso3166 = collector_profile.country_iso3166) \
                GROUP BY collector.id

  sql_attr_uint  = facebook_id
  sql_attr_uint  = score
  sql_attr_uint  = is_public

  sql_attr_timestamp  = created_at
}

source dev_collectors_normalized : dev_website
{
  sql_query  = SELECT (c.ID + 300000000) AS ID, c.ID AS object_id, 'collector' AS object_type, \
                      c.display_name AS title, c.email AS content, c.score AS score, \
                      UNIX_TIMESTAMP(c.updated_at) AS updated_at, UNIX_TIMESTAMP(c.created_at) AS created_at \
                 FROM collector AS c \
                GROUP BY c.ID

  sql_attr_uint   = object_id
  sql_attr_string = object_type
  sql_attr_uint   = score

  sql_attr_timestamp  = updated_at
  sql_attr_timestamp  = created_at
}

index prod_collectors : prod_website
{
  source  = prod_collectors
  path    = /var/lib/sphinx/website/collectors
}

index dev_collectors : dev_website
{
  source  = dev_collectors
  path    = /var/lib/sphinx/website/collectors
}

index dev_collectors_normalized : dev_website
{
  source  = dev_collectors_normalized
  path    = /var/lib/sphinx/website/collectors_normalized/dev
}
