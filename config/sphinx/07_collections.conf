### Collections Index

source prod_collections : prod_website
{
  sql_query  = SELECT collector_collection.*, collection_category.name AS category_name, GROUP_CONCAT(tag.name SEPARATOR ', ') AS tags \
                 FROM collector_collection \
                      LEFT JOIN collection_category ON (collection_category.id = collector_collection.collection_category_id) \
                      LEFT JOIN tagging ON (tagging.taggable_id = collector_collection.id AND \
                      tagging.taggable_model = 'Collection') LEFT JOIN tag ON (tag.id = tagging.id) \
                WHERE collector_collection.collector_id NOT IN (15716) \
                GROUP BY collector_collection.id

  sql_attr_uint  = collection_category_id
  sql_attr_uint  = collector_id

  sql_attr_uint  = num_items
  sql_attr_uint  = num_views
  sql_attr_uint  = num_comments

  sql_attr_uint  = score

  sql_attr_timestamp  = updated_at
  sql_attr_timestamp  = created_at
}

source dev_collections : dev_website
{
  sql_query  = SELECT collector_collection.*, collection_category.name AS category_name, GROUP_CONCAT(tag.name SEPARATOR ', ') AS tags \
                 FROM collector_collection \
                      LEFT JOIN collection_category ON (collection_category.id = collector_collection.collection_category_id) \
                      LEFT JOIN tagging ON (tagging.taggable_id = collector_collection.id AND \
                      tagging.taggable_model = 'Collection') LEFT JOIN tag ON (tag.id = tagging.id) \
                WHERE collector_collection.collector_id NOT IN (15716) \
                GROUP BY collector_collection.id

  sql_attr_uint  = collection_category_id
  sql_attr_uint  = collector_id

  sql_attr_uint  = num_items
  sql_attr_uint  = num_views
  sql_attr_uint  = num_comments

  sql_attr_uint  = score

  sql_attr_timestamp  = updated_at
  sql_attr_timestamp  = created_at
}

source dev_collections_normalized : dev_website
{
  sql_query  = SELECT (c.ID + 200000000) AS ID, c.ID AS object_id, 'collection' AS object_type, \
                      c.name AS title, c.description AS content, c.num_views AS score, \
                      cc.name AS category_name, IF(COUNT(m.id) > 0, 1, 0) AS has_thumbnail, \
                      c.num_items AS uint1, c.num_views AS uint2, c.num_comments AS uint3, 0 AS uint4, 0 AS uint5, \
                      GROUP_CONCAT(tag.name SEPARATOR ', ') AS tags, c.is_public AS is_public, \
                      UNIX_TIMESTAMP(c.updated_at) AS updated_at, UNIX_TIMESTAMP(c.created_at) AS created_at \
                 FROM collector_collection AS c \
                 LEFT JOIN content_category cc ON (cc.id = c.content_category_id) \
                 LEFT JOIN multimedia m ON (m.model = 'CollectorCollection' AND m.model_id = c.id AND m.is_primary = 1) \
                 LEFT JOIN tagging ON (tagging.taggable_id = c.id AND tagging.taggable_model = 'CollectorCollection') \
                 LEFT JOIN tag ON (tag.id = tagging.tag_id) \
                WHERE num_items > 0 AND c.collector_id NOT IN (15716) \
                GROUP BY c.ID

  sql_attr_uint   = object_id
  sql_attr_string = object_type
  sql_attr_uint   = has_thumbnail
  sql_attr_uint   = uint1
  sql_attr_uint   = uint2
  sql_attr_uint   = uint3
  sql_attr_uint   = uint4
  sql_attr_uint   = uint5
  sql_attr_uint   = score
  sql_attr_uint   = is_public

  sql_attr_timestamp  = updated_at
  sql_attr_timestamp  = created_at
}

source next_collections_normalized : next_website
{
  sql_query  = SELECT (c.ID + 200000000) AS ID, c.ID AS object_id, 'collection' AS object_type, \
                      c.name AS title, c.description AS content, c.num_views AS score, \
                      cc.name AS category_name, IF(COUNT(m.id) > 0, 1, 0) AS has_thumbnail, \
                      c.num_items AS uint1, c.num_views AS uint2, c.num_comments AS uint3, 0 AS uint4, 0 AS uint5, \
                      GROUP_CONCAT(tag.name SEPARATOR ', ') AS tags, c.is_public AS is_public, \
                      UNIX_TIMESTAMP(c.updated_at) AS updated_at, UNIX_TIMESTAMP(c.created_at) AS created_at \
                 FROM collector_collection AS c \
                 LEFT JOIN content_category cc ON (cc.id = c.content_category_id) \
                 LEFT JOIN multimedia m ON (m.model = 'CollectorCollection' AND m.model_id = c.id AND m.is_primary = 1) \
                 LEFT JOIN tagging ON (tagging.taggable_id = c.id AND tagging.taggable_model = 'CollectorCollection') \
                 LEFT JOIN tag ON (tag.id = tagging.tag_id) \
                WHERE num_items > 0 AND c.collector_id NOT IN (15716) \
                GROUP BY c.ID

  sql_attr_uint   = object_id
  sql_attr_string = object_type
  sql_attr_uint   = has_thumbnail
  sql_attr_uint   = uint1
  sql_attr_uint   = uint2
  sql_attr_uint   = uint3
  sql_attr_uint   = uint4
  sql_attr_uint   = uint5
  sql_attr_uint   = score
  sql_attr_uint   = is_public

  sql_attr_timestamp  = updated_at
  sql_attr_timestamp  = created_at
}

source prod_collections_normalized : prod_website
{
  sql_query  = SELECT (c.ID + 200000000) AS ID, c.ID AS object_id, 'collection' AS object_type, \
                      c.name AS title, c.description AS content, c.num_views AS score, \
                      cc.name AS category_name, IF(COUNT(m.id) > 0, 1, 0) AS has_thumbnail, \
                      c.num_items AS uint1, c.num_views AS uint2, c.num_comments AS uint3, 0 AS uint4, 0 AS uint5, \
                      GROUP_CONCAT(tag.name SEPARATOR ', ') AS tags, c.is_public AS is_public, \
                      UNIX_TIMESTAMP(c.updated_at) AS updated_at, UNIX_TIMESTAMP(c.created_at) AS created_at \
                 FROM collector_collection AS c \
                 LEFT JOIN content_category cc ON (cc.id = c.content_category_id) \
                 LEFT JOIN multimedia m ON (m.model = 'CollectorCollection' AND m.model_id = c.id AND m.is_primary = 1) \
                 LEFT JOIN tagging ON (tagging.taggable_id = c.id AND tagging.taggable_model = 'CollectorCollection') \
                 LEFT JOIN tag ON (tag.id = tagging.tag_id) \
                WHERE num_items > 0 AND c.collector_id NOT IN (15716) \
                GROUP BY c.ID

  sql_attr_uint   = object_id
  sql_attr_string = object_type
  sql_attr_uint   = has_thumbnail
  sql_attr_uint   = uint1
  sql_attr_uint   = uint2
  sql_attr_uint   = uint3
  sql_attr_uint   = uint4
  sql_attr_uint   = uint5
  sql_attr_uint   = score
  sql_attr_uint   = is_public

  sql_attr_timestamp  = updated_at
  sql_attr_timestamp  = created_at
}

index prod_collections : prod_website
{
  source  = prod_collections
  path    = /var/lib/sphinx/website/collections
}

index dev_collections : dev_website
{
  source  = dev_collections
  path    = /var/lib/sphinx/website/collections
}

index prod_collections_normalized : prod_website
{
  source  = prod_collections_normalized
  path    = /var/lib/sphinx/website/collections_normalized/prod
}

index dev_collections_normalized : dev_website
{
  source  = dev_collections_normalized
  path    = /var/lib/sphinx/website/collections_normalized/dev
}

index next_collections_normalized : next_website
{
  source  = next_collections_normalized
  path    = /var/lib/sphinx/website/collections_normalized/next
}
